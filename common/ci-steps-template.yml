steps:
- bash: |
    cd $(projectName)
    docker build \
        -t $(registryServerName)/$(imageName):$(imageTag) \
        .
  failOnStderr: true
  displayName: 'docker build'
- bash: |
    echo '$(registryPassword)' | docker login \
        $(registryServerName) \
        -u $(registryLogin) \
        --password-stdin
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  displayName: 'docker login'
- bash: |
    docker push $(registryServerName)/$(imageName):$(imageTag)
  failOnStderr: true
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  displayName: 'docker push'
- task: HelmInstaller@1
  displayName: "install helm"
  inputs:
    helmVersionToInstall: $(helmVersion)
- bash: |
    cd $(projectName)/charts/$(projectName)
    helm chart save . $(projectName):$(imageTag)
    helm chart save . $(registryName).azurecr.io/helm/$(projectName):$(imageTag)
    echo $(SP_PASS) | helm registry login $(registryName).azurecr.io --username $(SP_ID) --password-stdin
    helm chart push $(registryName).azurecr.io/helm/$(projectName):$(helmChartVersion)
    echo $(jq -n --arg version "$(helmChartVersion)" '{helmChartVersion: $version}') > $(build.artifactStagingDirectory)/variables.json
  failOnStderr: true
  displayName: "helm package"
- publish: $(build.artifactStagingDirectory)
  artifact: build-artifact
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
